name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'package.json'
      - 'backend/**/*'
      - 'frontend/**/*'
  pull_request:
    paths:
      - '.github/workflows/build.yml'
      - 'package.json'
      - 'backend/**/*'
      - 'frontend/**/*'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-20.04, macos-latest]
        feature: ["--no-default-features", "--all-features"]

    steps:
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: pnpm/action-setup@v2
        if: matrix.platform == 'windows-latest'
        with:
          version: 8.6.7

      - uses: oven-sh/setup-bun@v1
        if: matrix.platform != 'windows-latest'
        with:
          bun-version: latest

      - uses: actions/setup-node@v4
        if: matrix.platform == 'windows-latest'
        with:
          node-version: '20.x'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/checkout@v4

      - name: Install dependencies
        if: matrix.platform != 'windows-latest'
        run: cd frontend && bun install

      - name: Install dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: cd frontend && pnpm install

      - name: Build
        if: matrix.platform != 'windows-latest'
        run: cd ./frontend && bun run build && cd ../backend && cargo build --release ${{ matrix.feature }}

      - name: Build (Windows)
        if: matrix.platform == 'windows-latest'
        run: cd ./frontend && pnpm run build && cd ../backend && cargo build --release ${{ matrix.feature }}

      - name: Upload
        uses: actions/upload-artifact@v4
        if: matrix.platform != 'windows-latest'
        with:
          name: procchi-${{ matrix.platform }}-${{ matrix.feature == '--no-default-features' && 'minimal' || 'all-features' }}
          path: backend/target/release/procchi

      - name: Upload (Windows)
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: procchi-${{ matrix.platform }}-${{ matrix.feature == '--no-default-features' && 'minimal' || 'all-features' }}
          path: backend/target/release/procchi.exe